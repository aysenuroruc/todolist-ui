{"version":3,"sources":["logo.svg","components/LoginForm.js","components/RegistrationForm.js","components/Todo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FormItem","Form","Item","NormalLoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","fetch","method","headers","Accept","Content-Type","Authorization","then","res","loginSuccess","state","username","password","getFieldDecorator","react_default","a","createElement","id","es_form","onSubmit","className","initialValue","rules","required","message","input","prefix","icon","type","style","color","placeholder","valuePropName","es_checkbox","href","es_button","htmlType","React","Component","LoginForm","create","Option","Select","AutoCompleteOption","AutoComplete","residences","value","label","children","NormalRegistrationForm","confirmDirty","autoCompleteResult","validateFieldsAndScroll","handleConfirmBlur","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","handleWebsiteChange","map","domain","concat","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","es_select","width","websiteOptions","website","key","RegistrationForm_FormItem","assign","validator","onBlur","tooltip","title","whitespace","cascader","options","addonBefore","auto_complete","dataSource","onChange","extra","row","gutter","col","RegistrationForm","Todo","args","saveTodoList","body","JSON","stringify","todolists","removeTodoList","todos","selectTodoList","index","response","json","selected","createTodoList","push","length","handlePressEnter","todo","content","date","dateString","info","newTodos","selecetd","setDate","toConsumableArray","onTitleChange","payload","_this2","list","locale","emptyText","renderItem","item","onClick","defaultValue","onPressEnter","Todo_TodoItem","removeTodo","TodoItem","remove","_this3","handleDateChange","actions","date_picker","format","theme","Header","Layout","Footer","Content","Sider","App","registerForm","pageStatus","layout","paddingTop","paddingBottom","justify","components_LoginForm","components_RegistrationForm","Todo_Todo","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12280612.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass NormalLoginForm extends React.Component {\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n\t\tfetch('/home', {\r\n\t\t  method: 'GET',\r\n\t\t  headers: {\r\n\t\t\t'Accept': 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': 'Basic dXNlcjpwYXNzd29yZA=='\r\n\t\t  }\r\n\t\t}).then((res)=>{\r\n\t\t\tconsole.log(res);\r\n\t\t\tthis.props.loginSuccess();\r\n\t\t});\r\n      }\r\n    });\r\n  }\r\n  \r\n  constructor(props) {\r\n\tsuper(props);\r\n    this.state={username:\"user\", password: \"password\"};\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n\t<div id=\"components-form-demo-normal-login\">\r\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n        <FormItem>\r\n          {getFieldDecorator('username', {\r\n\t\t\tinitialValue: this.state.username,\r\n            rules: [{ required: true, message: 'Please input your username!' }],\r\n          })(\r\n            <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"username\" />\r\n          )}\r\n        </FormItem>\r\n        <FormItem>\r\n          {getFieldDecorator('password', {\r\n\t\t\tinitialValue: this.state.password,\r\n            rules: [{ required: true, message: 'Please input your Password!' }],\r\n          })(\r\n            <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n          )}\r\n        </FormItem>\r\n        <FormItem>\r\n          {getFieldDecorator('remember', {\r\n            valuePropName: 'checked',\r\n            initialValue: true,\r\n          })(\r\n            <Checkbox>Remember me</Checkbox>\r\n          )}\r\n          <a className=\"login-form-forgot\" href=\"/forgot\">Forgot password</a>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            Log in\r\n          </Button>\r\n          \r\n        </FormItem>\r\n      </Form>\r\n\t  </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst LoginForm = Form.create()(NormalLoginForm);\r\nexport default LoginForm;","import React from 'react';\r\nimport { Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst residences = [{\r\n  value: 'istanbul',\r\n  label: 'Istanbul',\r\n  children: [{\r\n    value: 'pendik',\r\n    label: 'Pendik',\r\n    children: [{\r\n      value: 'kurtkoy',\r\n      label: 'Kurtkoy',\r\n    }],\r\n  }],\r\n}, {\r\n  value: 'ankara',\r\n  label: 'Ankara',\r\n  children: [{\r\n    value: 'cankaya',\r\n    label: 'Cankaya',\r\n    children: [{\r\n      value: 'cayyolu',\r\n      label: 'Cayyolu',\r\n    }],\r\n  }],\r\n}];\r\n\r\nclass NormalRegistrationForm extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleConfirmBlur = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  }\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  }\r\n\r\n  handleWebsiteChange = (value) => {\r\n    let autoCompleteResult;\r\n    if (!value) {\r\n      autoCompleteResult = [];\r\n    } else {\r\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\r\n    }\r\n    this.setState({ autoCompleteResult });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { autoCompleteResult } = this.state;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    const prefixSelector = getFieldDecorator('prefix', {\r\n      initialValue: '86',\r\n    })(\r\n      <Select style={{ width: 70 }}>\r\n        <Option value=\"86\">+86</Option>\r\n        <Option value=\"87\">+87</Option>\r\n      </Select>\r\n    );\r\n\r\n    const websiteOptions = autoCompleteResult.map(website => (\r\n      <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\r\n    ));\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"E-mail\"\r\n        >\r\n          {getFieldDecorator('email', {\r\n            rules: [{\r\n              type: 'email', message: 'The input is not valid E-mail!',\r\n            }, {\r\n              required: true, message: 'Please input your E-mail!',\r\n            }],\r\n          })(\r\n            <Input />\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Password\"\r\n        >\r\n          {getFieldDecorator('password', {\r\n            rules: [{\r\n              required: true, message: 'Please input your password!',\r\n            }, {\r\n              validator: this.validateToNextPassword,\r\n            }],\r\n          })(\r\n            <Input type=\"password\" />\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Confirm Password\"\r\n        >\r\n          {getFieldDecorator('confirm', {\r\n            rules: [{\r\n              required: true, message: 'Please confirm your password!',\r\n            }, {\r\n              validator: this.compareToFirstPassword,\r\n            }],\r\n          })(\r\n            <Input type=\"password\" onBlur={this.handleConfirmBlur} />\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label={(\r\n            <span>\r\n              Nickname&nbsp;\r\n              <Tooltip title=\"What do you want others to call you?\">\r\n                <Icon type=\"question-circle-o\" />\r\n              </Tooltip>\r\n            </span>\r\n          )}\r\n        >\r\n          {getFieldDecorator('nickname', {\r\n            rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\r\n          })(\r\n            <Input />\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Habitual Residence\"\r\n        >\r\n          {getFieldDecorator('residence', {\r\n            initialValue: ['istanbul', 'pendik', 'kurtkoy'],\r\n            rules: [{ type: 'array', required: true, message: 'Please select your habitual residence!' }],\r\n          })(\r\n            <Cascader options={residences} />\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Phone Number\"\r\n        >\r\n          {getFieldDecorator('phone', {\r\n            rules: [{ required: true, message: 'Please input your phone number!' }],\r\n          })(\r\n            <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Website\"\r\n        >\r\n          {getFieldDecorator('website', {\r\n            rules: [{ required: true, message: 'Please input website!' }],\r\n          })(\r\n            <AutoComplete\r\n              dataSource={websiteOptions}\r\n              onChange={this.handleWebsiteChange}\r\n              placeholder=\"website\"\r\n            >\r\n              <Input />\r\n            </AutoComplete>\r\n          )}\r\n        </FormItem>\r\n        <FormItem\r\n          {...formItemLayout}\r\n          label=\"Captcha\"\r\n          extra=\"We must make sure that your are a human.\"\r\n        >\r\n          <Row gutter={8}>\r\n            <Col span={12}>\r\n              {getFieldDecorator('captcha', {\r\n                rules: [{ required: true, message: 'Please input the captcha you got!' }],\r\n              })(\r\n                <Input />\r\n              )}\r\n            </Col>\r\n            <Col span={12}>\r\n              <Button>Get captcha</Button>\r\n            </Col>\r\n          </Row>\r\n        </FormItem>\r\n        <FormItem {...tailFormItemLayout}>\r\n          {getFieldDecorator('agreement', {\r\n            valuePropName: 'checked',\r\n          })(\r\n            <Checkbox>I have read the <a href=\"\">agreement</a></Checkbox>\r\n          )}\r\n        </FormItem>\r\n        <FormItem {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">Register</Button>\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst RegistrationForm = Form.create()(NormalRegistrationForm);\r\nexport default RegistrationForm;","import React from 'react';\r\nimport { Input, List, Icon, DatePicker, Button, Row, Col } from \"antd\";\r\n\r\nimport \"antd/dist/antd.css\";\r\n\r\nexport default class Todo extends React.Component {\r\n  // --- snip ---\r\n  \r\n  constructor(args) {\r\n\t  super(args);\r\n\t  this.state={todolists:[], selected: -1};\r\n\t  fetch('/todolists', {\r\n\t\t  method: 'GET',\r\n\t\t  headers: {\r\n\t\t\t'Accept': 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': 'Basic dXNlcjpwYXNzd29yZA=='\r\n\t\t  }\r\n\t\t})\r\n\t\t.then(function(response) {\r\n\t\t\treturn response.json();\r\n\t\t  }).then((body)=>{\r\n\t\t\tconsole.log(body);\r\n\t\t\t//body.payload.push({});\r\n\t\t\tthis.setState({todolists: body.payload, selected: this.state.selected});\r\n\t\t\tconsole.info(this.state);\r\n\t\t});\r\n  }\r\n  \r\n  saveTodoList = e => {\r\n\t  console.log(\"Saving\");\r\n\t  \r\n\t  fetch('/todolists/saveall', {\r\n\t\t  method: 'POST',\r\n\t\t  headers: {\r\n\t\t\t'Accept': 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': 'Basic dXNlcjpwYXNzd29yZA=='\r\n\t\t  },\r\n\t\t  body: JSON.stringify(this.state.todolists)\r\n\t\t}).then((res)=>{\r\n\t\t\tconsole.log(res);\r\n\t\t\t\r\n\t\t});\r\n  }\r\n  removeTodoList = e => {\r\n\t  fetch('/todolists', {\r\n\t\t  method: 'POST',\r\n\t\t  headers: {\r\n\t\t\t'Accept': 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': 'Basic dXNlcjpwYXNzd29yZA=='\r\n\t\t  },\r\n\t\t  body: JSON.stringify(this.state.todos)\r\n\t\t}).then((res)=>{\r\n\t\t\tconsole.log(res);\r\n\t\t\t\r\n\t\t});\r\n  }\r\n  \r\n  selectTodoList = (id, index) => {\r\n\t  \r\n\t  fetch('/todolists/' + id, {\r\n\t\t  method: 'GET',\r\n\t\t  headers: {\r\n\t\t\t'Accept': 'application/json',\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': 'Basic dXNlcjpwYXNzd29yZA=='\r\n\t\t  }\r\n\t\t})\r\n\t\t.then(function(response) {\r\n\t\t\treturn response.json();\r\n\t\t  }).then((body)=>{\r\n\t\t\tconsole.log(body);\r\n\t\t\tconsole.log(\"index\");\r\n\t\t\tconsole.log(index);\r\n\t\t\tthis.setState({todolists:this.state.todolists, selected: index});\r\n\t\t});\r\n  }\r\n  createTodoList = e => {\r\n\t  let todolists = this.state.todolists;\r\n\t  todolists.push({todos:[]});\r\n\t  let selected=this.state.todolists.length-1;\r\n\t  this.setState({todolists: todolists, selected: selected});\r\n  }\r\n  \r\n  handlePressEnter = e => {\r\n    // Create a todo object containing its index, content,\r\n    // as well as an empty date\r\n    const todo = {\r\n      index: this.state.todolists[this.state.selected].length,\r\n      content: e.target.value,\r\n      date: null,\r\n      dateString: \"\"\r\n    };\r\n\r\n    // Add the new todo to our array\r\n\tconsole.info(this.state.todolists[this.state.selected]);\r\n    const newTodos = this.state.todolists[this.state.selected].todos.concat(todo);\r\n\r\n\tlet todolists = this.state.todolists;\r\n\ttodolists[this.state.selected].todos = newTodos;\r\n    this.setState({\r\n      todolists: this.state.todolists,\r\n\t  selecetd: this.state.selected\r\n    });\r\n\r\n    // Clear input\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  setDate = (index, date, dateString) => {\r\n    // Set the date of the given todo\r\n    let newTodos = [...this.state.todolists[this.state.selected].todos];\r\n    newTodos[index].date = date;\r\n    newTodos[index].dateString = dateString;\r\n\r\n    // Initialize the state\r\n\tlet todolists = this.state.todolists;\r\n\ttodolists[this.state.selected].todos = newTodos;\r\n    this.setState({\r\n      todolists: this.state.todolists,\r\n\t  selecetd: this.state.selected\r\n    });\r\n  };\r\n  onTitleChange=e=>{\r\n\t  let title=e.target.value;\r\n\t  this.state.todolists[this.state.selected].title = title;\r\n\t  this.setState({todolists: this.state.todolists,\r\n\t\tselected: this.state.selected\r\n\t  });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todoContainer\">\r\n        <h1>TODO App</h1>\r\n\r\n\t\t<Row >\r\n\t\t  <Col span={4}>\r\n\t\t    <List\r\n\t\t\t  locale={{ emptyText: \"No todo list\" }}\r\n\t\t\t  dataSource={this.state.todolists}\r\n\t\t\t  renderItem={(item, index) => (\r\n\t\t\t\t<a onClick={()=>this.selectTodoList(item.id, index)} id={item.id} index={index}>{item.title}</a>\r\n\t\t\t  )}\r\n\t\t\t/>\r\n\t\t  </Col>\r\n\t\t  <Col span={16}>\r\n\t\t\t  {this.state.selected>-1 ?\r\n\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t  placeholder=\"Title\"\r\n\t\t\t\t\t  onChange={this.onTitleChange}\r\n\t\t\t\t\t  defaultValue={this.state.todolists[this.state.selected].title}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t  placeholder=\"What needs to be done?\"\r\n\t\t\t\t\t  onPressEnter={this.handlePressEnter}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<List\r\n\t\t\t\t\t  locale={{ emptyText: \"No todo items\" }}\r\n\t\t\t\t\t  dataSource={this.state.todolists[this.state.selected].todos}\r\n\t\t\t\t\t  renderItem={(item, index) => (\r\n\t\t\t\t\t\t<TodoItem\r\n\t\t\t\t\t\t  todo={item}\r\n\t\t\t\t\t\t  removeTodo={this.removeTodo}\r\n\t\t\t\t\t\t  setDate={this.setDate}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t  )}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" onClick={this.saveTodoList}>\r\n\t\t\t\t\tSave\r\n\t\t\t\t  </Button>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t  : \"Select a todo list or create new one\"}\r\n\t\t\t  <div>\r\n\t\t\t\t\t<a onClick={this.createTodoList} >Create new todo list</a>\r\n\t\t\t\t</div>\r\n\t\t  </Col>\r\n\t\t</Row>\r\n        \r\n\t\t \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass TodoItem extends React.Component {\r\n  remove = () => {\r\n    // Remove this TodoItem\r\n    this.props.removeTodo(this.props.todo.index);\r\n  };\r\n\r\n  handleDateChange = (date, dateString) => {\r\n    // Update the date when changed\r\n    this.props.setDate(this.props.todo.index, date, dateString);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <List.Item\r\n        actions={[\r\n          <DatePicker\r\n            format=\"MM/DD/YYYY\"\r\n            onChange={this.handleDateChange}\r\n            value={this.props.todo.date}\r\n          />,\r\n          <Icon\r\n            type=\"close-circle\"\r\n            theme=\"filled\"\r\n            onClick={this.remove}\r\n          />\r\n        ]}\r\n      >\r\n        {this.props.todo.content}\r\n      </List.Item>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport LoginForm from './components/LoginForm'\nimport RegistrationForm from './components/RegistrationForm'\nimport Todo from './components/Todo'\nimport { Layout, Row, Col } from 'antd';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { pageStatus: \"login\" }\n  }\n  \n  registerForm = (e) => {\n\t  \n\t  this.setState({pageStatus: \"register\"});\n  }\n  loginSuccess = (e) => {\n\t  \n\t  this.setState({pageStatus: \"todo\"});\n  }\n  \n  render() {\n\t  if(this.state.pageStatus == \"login\") {\n    return (\n      <div className=\"App\">\n\t  \n\t    <Layout>\n          <Header>Login Form</Header>\n          <Content style={{paddingTop:100, paddingBottom:110}}>\n\t\t\t<Row type=\"flex\" justify=\"center\">\n\t\t\t  <Col value={500}>\n\t\t\t    <LoginForm loginSuccess={this.loginSuccess}/> \n\t\t\t  </Col>\n\t\t    </Row>\n\t\t\tOr <a href=\"#register\" onClick={this.registerForm}>register now!</a>\n\t\t  </Content>\n          <Footer ><h3>Your are @TodoList</h3></Footer>\n\t    </Layout>\n\t\t </div>\n\t\t )\n\t  }\n\t  else if (this.state.pageStatus == \"register\") {\n\t\t  return (\n\t\t  <div className=\"App\">\n\t  \n\t    <Layout>\n          <Header>Login Form</Header>\n          <Content style={{paddingTop:100, paddingBottom:110}}>\n\t\t\t<Row type=\"flex\" justify=\"center\">\n\t\t\t  <Col value={500}>\n\t\t\t   <RegistrationForm/> \n\t\t\t  </Col>\n\t\t    </Row>\n\t\t\tOr <a href=\"#register\" onClick={this.registerForm}>register now!</a>\n\t\t  </Content>\n          <Footer ><h3>Your are @TodoList</h3></Footer>\n\t    </Layout>\n\t\t </div>\n\t\t )\n\t  }\n     else if (this.state.pageStatus == \"todo\") {\n\t\t  return (\n\t\t  <div className=\"App\">\n\t  \n\t    <Layout>\n          <Header>Login Form</Header>\n          <Content style={{paddingTop:100, paddingBottom:110}}>\n\t\t\t<Row  justify=\"start\">\n\t\t\t  <Col span={24}>\n\t\t\t   <Todo />\n\t\t\t  </Col>\n\t\t    </Row>\n\t\t  </Content>\n          <Footer ><h3>Your are @TodoList</h3></Footer>\n\t    </Layout>\n\t\t </div>\n\t\t )\n\t  }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}